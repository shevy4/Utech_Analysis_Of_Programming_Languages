Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> statement_list
Rule 2     statement_list -> statement
Rule 3     statement_list -> statement_list statement
Rule 4     statement -> assignment
Rule 5     statement -> expression
Rule 6     statement -> print_statement
Rule 7     assignment -> IDENTIFIER EQUALS expression
Rule 8     expression -> NUMBER
Rule 9     expression -> STRING
Rule 10    expression -> IDENTIFIER
Rule 11    expression -> expression OPERATOR expression
Rule 12    expression -> LPAREN expression RPAREN
Rule 13    print_statement -> PRINT expression_list
Rule 14    expression_list -> expression
Rule 15    expression_list -> expression_list COMMA expression

Terminals, with rules where they appear

COMMA                : 15
EQUALS               : 7
IDENTIFIER           : 7 10
LPAREN               : 12
NUMBER               : 8
OPERATOR             : 11
PRINT                : 13
RPAREN               : 12
STRING               : 9
error                : 

Nonterminals, with rules where they appear

assignment           : 4
expression           : 5 7 11 11 12 14 15
expression_list      : 13 15
print_statement      : 6
program              : 0
statement            : 2 3
statement_list       : 1 3

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement_list
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (4) statement -> . assignment
    (5) statement -> . expression
    (6) statement -> . print_statement
    (7) assignment -> . IDENTIFIER EQUALS expression
    (8) expression -> . NUMBER
    (9) expression -> . STRING
    (10) expression -> . IDENTIFIER
    (11) expression -> . expression OPERATOR expression
    (12) expression -> . LPAREN expression RPAREN
    (13) print_statement -> . PRINT expression_list

    IDENTIFIER      shift and go to state 7
    NUMBER          shift and go to state 8
    STRING          shift and go to state 9
    LPAREN          shift and go to state 10
    PRINT           shift and go to state 11

    program                        shift and go to state 1
    statement_list                 shift and go to state 2
    statement                      shift and go to state 3
    assignment                     shift and go to state 4
    expression                     shift and go to state 5
    print_statement                shift and go to state 6

state 1

    (0) S' -> program .



state 2

    (1) program -> statement_list .
    (3) statement_list -> statement_list . statement
    (4) statement -> . assignment
    (5) statement -> . expression
    (6) statement -> . print_statement
    (7) assignment -> . IDENTIFIER EQUALS expression
    (8) expression -> . NUMBER
    (9) expression -> . STRING
    (10) expression -> . IDENTIFIER
    (11) expression -> . expression OPERATOR expression
    (12) expression -> . LPAREN expression RPAREN
    (13) print_statement -> . PRINT expression_list

    $end            reduce using rule 1 (program -> statement_list .)
    IDENTIFIER      shift and go to state 7
    NUMBER          shift and go to state 8
    STRING          shift and go to state 9
    LPAREN          shift and go to state 10
    PRINT           shift and go to state 11

    statement                      shift and go to state 12
    assignment                     shift and go to state 4
    expression                     shift and go to state 5
    print_statement                shift and go to state 6

state 3

    (2) statement_list -> statement .

    IDENTIFIER      reduce using rule 2 (statement_list -> statement .)
    NUMBER          reduce using rule 2 (statement_list -> statement .)
    STRING          reduce using rule 2 (statement_list -> statement .)
    LPAREN          reduce using rule 2 (statement_list -> statement .)
    PRINT           reduce using rule 2 (statement_list -> statement .)
    $end            reduce using rule 2 (statement_list -> statement .)


state 4

    (4) statement -> assignment .

    IDENTIFIER      reduce using rule 4 (statement -> assignment .)
    NUMBER          reduce using rule 4 (statement -> assignment .)
    STRING          reduce using rule 4 (statement -> assignment .)
    LPAREN          reduce using rule 4 (statement -> assignment .)
    PRINT           reduce using rule 4 (statement -> assignment .)
    $end            reduce using rule 4 (statement -> assignment .)


state 5

    (5) statement -> expression .
    (11) expression -> expression . OPERATOR expression

    IDENTIFIER      reduce using rule 5 (statement -> expression .)
    NUMBER          reduce using rule 5 (statement -> expression .)
    STRING          reduce using rule 5 (statement -> expression .)
    LPAREN          reduce using rule 5 (statement -> expression .)
    PRINT           reduce using rule 5 (statement -> expression .)
    $end            reduce using rule 5 (statement -> expression .)
    OPERATOR        shift and go to state 13


state 6

    (6) statement -> print_statement .

    IDENTIFIER      reduce using rule 6 (statement -> print_statement .)
    NUMBER          reduce using rule 6 (statement -> print_statement .)
    STRING          reduce using rule 6 (statement -> print_statement .)
    LPAREN          reduce using rule 6 (statement -> print_statement .)
    PRINT           reduce using rule 6 (statement -> print_statement .)
    $end            reduce using rule 6 (statement -> print_statement .)


state 7

    (7) assignment -> IDENTIFIER . EQUALS expression
    (10) expression -> IDENTIFIER .

    EQUALS          shift and go to state 14
    OPERATOR        reduce using rule 10 (expression -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 10 (expression -> IDENTIFIER .)
    NUMBER          reduce using rule 10 (expression -> IDENTIFIER .)
    STRING          reduce using rule 10 (expression -> IDENTIFIER .)
    LPAREN          reduce using rule 10 (expression -> IDENTIFIER .)
    PRINT           reduce using rule 10 (expression -> IDENTIFIER .)
    $end            reduce using rule 10 (expression -> IDENTIFIER .)


state 8

    (8) expression -> NUMBER .

    OPERATOR        reduce using rule 8 (expression -> NUMBER .)
    IDENTIFIER      reduce using rule 8 (expression -> NUMBER .)
    NUMBER          reduce using rule 8 (expression -> NUMBER .)
    STRING          reduce using rule 8 (expression -> NUMBER .)
    LPAREN          reduce using rule 8 (expression -> NUMBER .)
    PRINT           reduce using rule 8 (expression -> NUMBER .)
    $end            reduce using rule 8 (expression -> NUMBER .)
    RPAREN          reduce using rule 8 (expression -> NUMBER .)
    COMMA           reduce using rule 8 (expression -> NUMBER .)


state 9

    (9) expression -> STRING .

    OPERATOR        reduce using rule 9 (expression -> STRING .)
    IDENTIFIER      reduce using rule 9 (expression -> STRING .)
    NUMBER          reduce using rule 9 (expression -> STRING .)
    STRING          reduce using rule 9 (expression -> STRING .)
    LPAREN          reduce using rule 9 (expression -> STRING .)
    PRINT           reduce using rule 9 (expression -> STRING .)
    $end            reduce using rule 9 (expression -> STRING .)
    RPAREN          reduce using rule 9 (expression -> STRING .)
    COMMA           reduce using rule 9 (expression -> STRING .)


state 10

    (12) expression -> LPAREN . expression RPAREN
    (8) expression -> . NUMBER
    (9) expression -> . STRING
    (10) expression -> . IDENTIFIER
    (11) expression -> . expression OPERATOR expression
    (12) expression -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 8
    STRING          shift and go to state 9
    IDENTIFIER      shift and go to state 16
    LPAREN          shift and go to state 10

    expression                     shift and go to state 15

state 11

    (13) print_statement -> PRINT . expression_list
    (14) expression_list -> . expression
    (15) expression_list -> . expression_list COMMA expression
    (8) expression -> . NUMBER
    (9) expression -> . STRING
    (10) expression -> . IDENTIFIER
    (11) expression -> . expression OPERATOR expression
    (12) expression -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 8
    STRING          shift and go to state 9
    IDENTIFIER      shift and go to state 16
    LPAREN          shift and go to state 10

    expression_list                shift and go to state 17
    expression                     shift and go to state 18

state 12

    (3) statement_list -> statement_list statement .

    IDENTIFIER      reduce using rule 3 (statement_list -> statement_list statement .)
    NUMBER          reduce using rule 3 (statement_list -> statement_list statement .)
    STRING          reduce using rule 3 (statement_list -> statement_list statement .)
    LPAREN          reduce using rule 3 (statement_list -> statement_list statement .)
    PRINT           reduce using rule 3 (statement_list -> statement_list statement .)
    $end            reduce using rule 3 (statement_list -> statement_list statement .)


state 13

    (11) expression -> expression OPERATOR . expression
    (8) expression -> . NUMBER
    (9) expression -> . STRING
    (10) expression -> . IDENTIFIER
    (11) expression -> . expression OPERATOR expression
    (12) expression -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 8
    STRING          shift and go to state 9
    IDENTIFIER      shift and go to state 16
    LPAREN          shift and go to state 10

    expression                     shift and go to state 19

state 14

    (7) assignment -> IDENTIFIER EQUALS . expression
    (8) expression -> . NUMBER
    (9) expression -> . STRING
    (10) expression -> . IDENTIFIER
    (11) expression -> . expression OPERATOR expression
    (12) expression -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 8
    STRING          shift and go to state 9
    IDENTIFIER      shift and go to state 16
    LPAREN          shift and go to state 10

    expression                     shift and go to state 20

state 15

    (12) expression -> LPAREN expression . RPAREN
    (11) expression -> expression . OPERATOR expression

    RPAREN          shift and go to state 21
    OPERATOR        shift and go to state 13


state 16

    (10) expression -> IDENTIFIER .

    RPAREN          reduce using rule 10 (expression -> IDENTIFIER .)
    OPERATOR        reduce using rule 10 (expression -> IDENTIFIER .)
    COMMA           reduce using rule 10 (expression -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 10 (expression -> IDENTIFIER .)
    NUMBER          reduce using rule 10 (expression -> IDENTIFIER .)
    STRING          reduce using rule 10 (expression -> IDENTIFIER .)
    LPAREN          reduce using rule 10 (expression -> IDENTIFIER .)
    PRINT           reduce using rule 10 (expression -> IDENTIFIER .)
    $end            reduce using rule 10 (expression -> IDENTIFIER .)


state 17

    (13) print_statement -> PRINT expression_list .
    (15) expression_list -> expression_list . COMMA expression

    IDENTIFIER      reduce using rule 13 (print_statement -> PRINT expression_list .)
    NUMBER          reduce using rule 13 (print_statement -> PRINT expression_list .)
    STRING          reduce using rule 13 (print_statement -> PRINT expression_list .)
    LPAREN          reduce using rule 13 (print_statement -> PRINT expression_list .)
    PRINT           reduce using rule 13 (print_statement -> PRINT expression_list .)
    $end            reduce using rule 13 (print_statement -> PRINT expression_list .)
    COMMA           shift and go to state 22


state 18

    (14) expression_list -> expression .
    (11) expression -> expression . OPERATOR expression

    COMMA           reduce using rule 14 (expression_list -> expression .)
    IDENTIFIER      reduce using rule 14 (expression_list -> expression .)
    NUMBER          reduce using rule 14 (expression_list -> expression .)
    STRING          reduce using rule 14 (expression_list -> expression .)
    LPAREN          reduce using rule 14 (expression_list -> expression .)
    PRINT           reduce using rule 14 (expression_list -> expression .)
    $end            reduce using rule 14 (expression_list -> expression .)
    OPERATOR        shift and go to state 13


state 19

    (11) expression -> expression OPERATOR expression .
    (11) expression -> expression . OPERATOR expression

  ! shift/reduce conflict for OPERATOR resolved as shift
    IDENTIFIER      reduce using rule 11 (expression -> expression OPERATOR expression .)
    NUMBER          reduce using rule 11 (expression -> expression OPERATOR expression .)
    STRING          reduce using rule 11 (expression -> expression OPERATOR expression .)
    LPAREN          reduce using rule 11 (expression -> expression OPERATOR expression .)
    PRINT           reduce using rule 11 (expression -> expression OPERATOR expression .)
    $end            reduce using rule 11 (expression -> expression OPERATOR expression .)
    RPAREN          reduce using rule 11 (expression -> expression OPERATOR expression .)
    COMMA           reduce using rule 11 (expression -> expression OPERATOR expression .)
    OPERATOR        shift and go to state 13

  ! OPERATOR        [ reduce using rule 11 (expression -> expression OPERATOR expression .) ]


state 20

    (7) assignment -> IDENTIFIER EQUALS expression .
    (11) expression -> expression . OPERATOR expression

    IDENTIFIER      reduce using rule 7 (assignment -> IDENTIFIER EQUALS expression .)
    NUMBER          reduce using rule 7 (assignment -> IDENTIFIER EQUALS expression .)
    STRING          reduce using rule 7 (assignment -> IDENTIFIER EQUALS expression .)
    LPAREN          reduce using rule 7 (assignment -> IDENTIFIER EQUALS expression .)
    PRINT           reduce using rule 7 (assignment -> IDENTIFIER EQUALS expression .)
    $end            reduce using rule 7 (assignment -> IDENTIFIER EQUALS expression .)
    OPERATOR        shift and go to state 13


state 21

    (12) expression -> LPAREN expression RPAREN .

    OPERATOR        reduce using rule 12 (expression -> LPAREN expression RPAREN .)
    IDENTIFIER      reduce using rule 12 (expression -> LPAREN expression RPAREN .)
    NUMBER          reduce using rule 12 (expression -> LPAREN expression RPAREN .)
    STRING          reduce using rule 12 (expression -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 12 (expression -> LPAREN expression RPAREN .)
    PRINT           reduce using rule 12 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 12 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 12 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 12 (expression -> LPAREN expression RPAREN .)


state 22

    (15) expression_list -> expression_list COMMA . expression
    (8) expression -> . NUMBER
    (9) expression -> . STRING
    (10) expression -> . IDENTIFIER
    (11) expression -> . expression OPERATOR expression
    (12) expression -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 8
    STRING          shift and go to state 9
    IDENTIFIER      shift and go to state 16
    LPAREN          shift and go to state 10

    expression                     shift and go to state 23

state 23

    (15) expression_list -> expression_list COMMA expression .
    (11) expression -> expression . OPERATOR expression

    COMMA           reduce using rule 15 (expression_list -> expression_list COMMA expression .)
    IDENTIFIER      reduce using rule 15 (expression_list -> expression_list COMMA expression .)
    NUMBER          reduce using rule 15 (expression_list -> expression_list COMMA expression .)
    STRING          reduce using rule 15 (expression_list -> expression_list COMMA expression .)
    LPAREN          reduce using rule 15 (expression_list -> expression_list COMMA expression .)
    PRINT           reduce using rule 15 (expression_list -> expression_list COMMA expression .)
    $end            reduce using rule 15 (expression_list -> expression_list COMMA expression .)
    OPERATOR        shift and go to state 13

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for OPERATOR in state 19 resolved as shift

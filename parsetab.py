
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADD ADDRESS ADDRESS_LITERAL BOOL CLOSEPAREN COMMA CONTRACT CURLYCLOSINGPAREN CURLYOPENINGPAREN DIVIDE DO ELSE EMIT END EQUAL EQUIVALENT EVENT EXTERNAL FOR FUNCTION GREATERTHAN GREATERTHANOREQUAL IDENTIFIER IF INT INTERNAL LESSTHAN LESSTHANOREQUAL MULTIPLY NETWORK_IDENTIFIER NOTEQUAL NUMBER OPENPAREN PRINT PRIVATE PUBLIC RETURN RETURNS SEMICOLON STRING STRING_LITERAL SUBTRACT THEN TYPE_SPECIFIER VAR VISIBILITY WHILE\n    statement_list : statement statement_list\n                   | statement\n    \n    statement : assignment\n              | if_statement\n              | for_loop\n              | while_loop\n              | display\n              | return_statement\n              | contract_declaration\n              | function_declaration\n              | event_declaration\n              | emit_event\n    \n    assignment : identifier EQUAL expression SEMICOLON\n               | VAR identifier EQUAL expression SEMICOLON\n    \n    if_statement : IF OPENPAREN condition CLOSEPAREN THEN statement ELSE statement END\n                 | IF OPENPAREN condition CLOSEPAREN THEN statement END\n    \n    for_loop : FOR OPENPAREN assignment condition SEMICOLON assignment CLOSEPAREN DO statement END\n    \n    while_loop : WHILE OPENPAREN condition CLOSEPAREN DO statement END\n    \n    display : PRINT OPENPAREN expression CLOSEPAREN SEMICOLON\n    \n    return_statement : RETURN expression SEMICOLON\n    \n    condition : expression comparator expression\n    \n    expression : term\n               | expression ADD term\n               | expression SUBTRACT term\n               | string_literal\n    \n    string_literal : STRING_LITERAL\n    \n    term : factor\n         | term MULTIPLY factor\n         | term DIVIDE factor\n    \n    factor : NUMBER\n           | OPENPAREN expression CLOSEPAREN\n           | identifier\n    \n    comparator : LESSTHAN\n               | GREATERTHAN\n               | LESSTHANOREQUAL\n               | GREATERTHANOREQUAL\n               | NOTEQUAL\n               | EQUIVALENT\n    \n    number : NUMBER\n    \n    identifier : IDENTIFIER\n    \n    contract_declaration : CONTRACT IDENTIFIER CURLYOPENINGPAREN contract_statement_list CURLYCLOSINGPAREN\n    \n    contract_statement_list : contract_statement_list contract_statement\n                            | contract_statement\n    \n    contract_statement : state_declaration\n                       | function_declaration\n                       | event_declaration\n    \n    state_declaration : VAR IDENTIFIER TYPE_SPECIFIER EQUAL expression SEMICOLON\n                      | VAR IDENTIFIER TYPE_SPECIFIER SEMICOLON\n    \n    function_declaration : VISIBILITY FUNCTION IDENTIFIER OPENPAREN function_params_list CLOSEPAREN RETURNS OPENPAREN TYPE_SPECIFIER CLOSEPAREN statement\n                         | VISIBILITY FUNCTION IDENTIFIER OPENPAREN CLOSEPAREN statement\n    \n    function_params_list : function_params_list COMMA function_params\n                         | function_params\n    \n    function_params : TYPE_SPECIFIER IDENTIFIER\n    \n    event_declaration : EVENT IDENTIFIER OPENPAREN event_params_list CLOSEPAREN SEMICOLON\n                      | EVENT IDENTIFIER OPENPAREN CLOSEPAREN SEMICOLON\n    \n    event_params_list : event_params_list COMMA event_param\n                      | event_param\n    \n    event_param : TYPE_SPECIFIER IDENTIFIER\n    \n    visibility : PUBLIC\n               | PRIVATE\n               | INTERNAL\n               | EXTERNAL\n    \n    type_specifier : ADDRESS\n                   | BOOL\n                   | INT\n                   | STRING\n                   | ADDRESS_LITERAL\n                   | NETWORK_IDENTIFIER\n    \n    emit_event : EMIT IDENTIFIER OPENPAREN expression_list CLOSEPAREN SEMICOLON\n               | EMIT IDENTIFIER OPENPAREN CLOSEPAREN SEMICOLON\n    \n    expression_list : expression_list COMMA expression\n                    | expression\n    '
    
_lr_action_items = {'VAR':([0,2,3,4,5,6,7,8,9,10,11,12,29,51,57,61,79,80,81,82,83,93,94,96,97,98,99,100,103,108,112,119,121,123,125,126,128,130,134,137,139,141,142,143,],[14,14,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,14,-20,84,-13,84,-43,-44,-45,-46,-14,14,14,14,-19,-41,-42,14,-55,-70,-50,-54,-69,14,-16,-18,-48,14,-15,-47,-17,14,-49,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,51,61,93,94,97,98,99,103,108,112,119,121,123,125,126,128,134,137,141,142,143,],[15,15,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-20,-13,-14,15,15,-19,-41,15,-55,-70,-50,-54,-69,15,-16,-18,15,-15,-17,15,-49,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,12,51,61,93,94,97,98,99,103,108,112,119,121,123,125,126,128,134,137,141,142,143,],[16,16,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-20,-13,-14,16,16,-19,-41,16,-55,-70,-50,-54,-69,16,-16,-18,16,-15,-17,16,-49,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,51,61,93,94,97,98,99,103,108,112,119,121,123,125,126,128,134,137,141,142,143,],[17,17,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-20,-13,-14,17,17,-19,-41,17,-55,-70,-50,-54,-69,17,-16,-18,17,-15,-17,17,-49,]),'PRINT':([0,2,3,4,5,6,7,8,9,10,11,12,51,61,93,94,97,98,99,103,108,112,119,121,123,125,126,128,134,137,141,142,143,],[18,18,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-20,-13,-14,18,18,-19,-41,18,-55,-70,-50,-54,-69,18,-16,-18,18,-15,-17,18,-49,]),'RETURN':([0,2,3,4,5,6,7,8,9,10,11,12,51,61,93,94,97,98,99,103,108,112,119,121,123,125,126,128,134,137,141,142,143,],[19,19,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-20,-13,-14,19,19,-19,-41,19,-55,-70,-50,-54,-69,19,-16,-18,19,-15,-17,19,-49,]),'CONTRACT':([0,2,3,4,5,6,7,8,9,10,11,12,51,61,93,94,97,98,99,103,108,112,119,121,123,125,126,128,134,137,141,142,143,],[20,20,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-20,-13,-14,20,20,-19,-41,20,-55,-70,-50,-54,-69,20,-16,-18,20,-15,-17,20,-49,]),'VISIBILITY':([0,2,3,4,5,6,7,8,9,10,11,12,51,57,61,79,80,81,82,83,93,94,97,98,99,100,103,108,112,119,121,123,125,126,128,130,134,137,139,141,142,143,],[22,22,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-20,22,-13,22,-43,-44,-45,-46,-14,22,22,-19,-41,-42,22,-55,-70,-50,-54,-69,22,-16,-18,-48,22,-15,-47,-17,22,-49,]),'EVENT':([0,2,3,4,5,6,7,8,9,10,11,12,51,57,61,79,80,81,82,83,93,94,97,98,99,100,103,108,112,119,121,123,125,126,128,130,134,137,139,141,142,143,],[23,23,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-20,23,-13,23,-43,-44,-45,-46,-14,23,23,-19,-41,-42,23,-55,-70,-50,-54,-69,23,-16,-18,-48,23,-15,-47,-17,23,-49,]),'EMIT':([0,2,3,4,5,6,7,8,9,10,11,12,51,61,93,94,97,98,99,103,108,112,119,121,123,125,126,128,134,137,141,142,143,],[24,24,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-20,-13,-14,24,24,-19,-41,24,-55,-70,-50,-54,-69,24,-16,-18,24,-15,-17,24,-49,]),'IDENTIFIER':([0,2,3,4,5,6,7,8,9,10,11,12,14,19,20,23,24,26,28,29,30,31,38,41,45,48,51,52,53,54,55,60,61,64,65,66,67,68,69,70,84,89,93,94,96,97,98,99,103,104,108,111,112,119,121,123,125,126,128,129,134,137,141,142,143,],[21,21,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,21,21,40,42,43,21,21,21,21,21,21,58,21,21,-20,21,21,21,21,21,-13,21,-33,-34,-35,-36,-37,-38,101,109,-14,21,21,21,-19,-41,21,120,-55,21,-70,-50,-54,-69,21,-16,-18,21,21,-15,-17,21,-49,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,25,51,61,93,98,99,108,112,119,121,123,126,128,137,141,143,],[0,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-1,-20,-13,-14,-19,-41,-55,-70,-50,-54,-69,-16,-18,-15,-17,-49,]),'ELSE':([3,4,5,6,7,8,9,10,11,12,51,61,93,98,99,108,112,113,119,121,123,126,128,137,141,143,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-20,-13,-14,-19,-41,-55,-70,125,-50,-54,-69,-16,-18,-15,-17,-49,]),'END':([3,4,5,6,7,8,9,10,11,12,51,61,93,98,99,108,112,113,115,119,121,123,126,128,133,137,138,141,143,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-20,-13,-14,-19,-41,-55,-70,126,128,-50,-54,-69,-16,-18,137,-15,141,-17,-49,]),'CURLYCLOSINGPAREN':([3,4,5,6,7,8,9,10,11,12,51,61,79,80,81,82,83,93,98,99,100,108,112,119,121,123,126,128,130,137,139,141,143,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-20,-13,99,-43,-44,-45,-46,-14,-19,-41,-42,-55,-70,-50,-54,-69,-16,-18,-48,-15,-47,-17,-49,]),'EQUAL':([13,21,27,116,],[26,-40,45,129,]),'OPENPAREN':([15,16,17,18,19,26,28,30,31,38,42,43,45,48,52,53,54,55,58,60,61,64,65,66,67,68,69,70,93,111,129,131,],[28,29,30,31,38,38,38,38,38,38,59,60,38,38,38,38,38,38,85,38,-13,38,-33,-34,-35,-36,-37,-38,-14,38,38,136,]),'STRING_LITERAL':([19,26,28,30,31,38,45,48,60,61,64,65,66,67,68,69,70,93,111,129,],[36,36,36,36,36,36,36,36,36,-13,36,-33,-34,-35,-36,-37,-38,-14,36,36,]),'NUMBER':([19,26,28,30,31,38,45,48,52,53,54,55,60,61,64,65,66,67,68,69,70,93,111,129,],[37,37,37,37,37,37,37,37,37,37,37,37,37,-13,37,-33,-34,-35,-36,-37,-38,-14,37,37,]),'MULTIPLY':([21,33,35,37,39,74,75,76,77,78,],[-40,54,-27,-30,-32,54,54,-28,-29,-31,]),'DIVIDE':([21,33,35,37,39,74,75,76,77,78,],[-40,55,-27,-30,-32,55,55,-28,-29,-31,]),'SEMICOLON':([21,32,33,34,35,36,37,39,44,62,71,73,74,75,76,77,78,87,91,95,106,110,116,135,],[-40,51,-22,-25,-27,-26,-30,-32,61,93,96,98,-23,-24,-28,-29,-31,108,112,-21,121,123,130,139,]),'ADD':([21,32,33,34,35,36,37,39,44,47,50,56,62,74,75,76,77,78,92,95,124,135,],[-40,52,-22,-25,-27,-26,-30,-32,52,52,52,52,52,-23,-24,-28,-29,-31,52,52,52,52,]),'SUBTRACT':([21,32,33,34,35,36,37,39,44,47,50,56,62,74,75,76,77,78,92,95,124,135,],[-40,53,-22,-25,-27,-26,-30,-32,53,53,53,53,53,-23,-24,-28,-29,-31,53,53,53,53,]),'LESSTHAN':([21,33,34,35,36,37,39,47,74,75,76,77,78,],[-40,-22,-25,-27,-26,-30,-32,65,-23,-24,-28,-29,-31,]),'GREATERTHAN':([21,33,34,35,36,37,39,47,74,75,76,77,78,],[-40,-22,-25,-27,-26,-30,-32,66,-23,-24,-28,-29,-31,]),'LESSTHANOREQUAL':([21,33,34,35,36,37,39,47,74,75,76,77,78,],[-40,-22,-25,-27,-26,-30,-32,67,-23,-24,-28,-29,-31,]),'GREATERTHANOREQUAL':([21,33,34,35,36,37,39,47,74,75,76,77,78,],[-40,-22,-25,-27,-26,-30,-32,68,-23,-24,-28,-29,-31,]),'NOTEQUAL':([21,33,34,35,36,37,39,47,74,75,76,77,78,],[-40,-22,-25,-27,-26,-30,-32,69,-23,-24,-28,-29,-31,]),'EQUIVALENT':([21,33,34,35,36,37,39,47,74,75,76,77,78,],[-40,-22,-25,-27,-26,-30,-32,70,-23,-24,-28,-29,-31,]),'CLOSEPAREN':([21,33,34,35,36,37,39,46,49,50,56,59,60,61,74,75,76,77,78,85,86,88,90,92,93,95,102,105,109,114,120,122,124,132,140,],[-40,-22,-25,-27,-26,-30,-32,63,72,73,78,87,91,-13,-23,-24,-28,-29,-31,103,106,-57,110,-72,-14,-21,117,-52,-58,127,-53,-56,-71,-51,142,]),'COMMA':([21,33,34,35,36,37,39,74,75,76,77,78,86,88,90,92,102,105,109,120,122,124,132,],[-40,-22,-25,-27,-26,-30,-32,-23,-24,-28,-29,-31,107,-57,111,-72,118,-52,-58,-53,-56,-71,-51,]),'FUNCTION':([22,],[41,]),'CURLYOPENINGPAREN':([40,],[57,]),'TYPE_SPECIFIER':([59,85,101,107,118,136,],[89,104,116,89,104,140,]),'THEN':([63,],[94,]),'DO':([72,127,],[97,134,]),'RETURNS':([117,],[131,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement_list':([0,2,],[1,25,]),'statement':([0,2,94,97,103,125,134,142,],[2,2,113,115,119,133,138,143,]),'assignment':([0,2,29,94,96,97,103,125,134,142,],[3,3,48,3,114,3,3,3,3,3,]),'if_statement':([0,2,94,97,103,125,134,142,],[4,4,4,4,4,4,4,4,]),'for_loop':([0,2,94,97,103,125,134,142,],[5,5,5,5,5,5,5,5,]),'while_loop':([0,2,94,97,103,125,134,142,],[6,6,6,6,6,6,6,6,]),'display':([0,2,94,97,103,125,134,142,],[7,7,7,7,7,7,7,7,]),'return_statement':([0,2,94,97,103,125,134,142,],[8,8,8,8,8,8,8,8,]),'contract_declaration':([0,2,94,97,103,125,134,142,],[9,9,9,9,9,9,9,9,]),'function_declaration':([0,2,57,79,94,97,103,125,134,142,],[10,10,82,82,10,10,10,10,10,10,]),'event_declaration':([0,2,57,79,94,97,103,125,134,142,],[11,11,83,83,11,11,11,11,11,11,]),'emit_event':([0,2,94,97,103,125,134,142,],[12,12,12,12,12,12,12,12,]),'identifier':([0,2,14,19,26,28,29,30,31,38,45,48,52,53,54,55,60,64,94,96,97,103,111,125,129,134,142,],[13,13,27,39,39,39,13,39,39,39,39,39,39,39,39,39,39,39,13,13,13,13,39,13,39,13,13,]),'expression':([19,26,28,30,31,38,45,48,60,64,111,129,],[32,44,47,47,50,56,62,47,92,95,124,135,]),'term':([19,26,28,30,31,38,45,48,52,53,60,64,111,129,],[33,33,33,33,33,33,33,33,74,75,33,33,33,33,]),'string_literal':([19,26,28,30,31,38,45,48,60,64,111,129,],[34,34,34,34,34,34,34,34,34,34,34,34,]),'factor':([19,26,28,30,31,38,45,48,52,53,54,55,60,64,111,129,],[35,35,35,35,35,35,35,35,35,35,76,77,35,35,35,35,]),'condition':([28,30,48,],[46,49,71,]),'comparator':([47,],[64,]),'contract_statement_list':([57,],[79,]),'contract_statement':([57,79,],[80,100,]),'state_declaration':([57,79,],[81,81,]),'event_params_list':([59,],[86,]),'event_param':([59,107,],[88,122,]),'expression_list':([60,],[90,]),'function_params_list':([85,],[102,]),'function_params':([85,118,],[105,132,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement_list","S'",1,None,None,None),
  ('statement_list -> statement statement_list','statement_list',2,'p_statement_list','CCparser.py',13),
  ('statement_list -> statement','statement_list',1,'p_statement_list','CCparser.py',14),
  ('statement -> assignment','statement',1,'p_statement','CCparser.py',23),
  ('statement -> if_statement','statement',1,'p_statement','CCparser.py',24),
  ('statement -> for_loop','statement',1,'p_statement','CCparser.py',25),
  ('statement -> while_loop','statement',1,'p_statement','CCparser.py',26),
  ('statement -> display','statement',1,'p_statement','CCparser.py',27),
  ('statement -> return_statement','statement',1,'p_statement','CCparser.py',28),
  ('statement -> contract_declaration','statement',1,'p_statement','CCparser.py',29),
  ('statement -> function_declaration','statement',1,'p_statement','CCparser.py',30),
  ('statement -> event_declaration','statement',1,'p_statement','CCparser.py',31),
  ('statement -> emit_event','statement',1,'p_statement','CCparser.py',32),
  ('assignment -> identifier EQUAL expression SEMICOLON','assignment',4,'p_assignment','CCparser.py',39),
  ('assignment -> VAR identifier EQUAL expression SEMICOLON','assignment',5,'p_assignment','CCparser.py',40),
  ('if_statement -> IF OPENPAREN condition CLOSEPAREN THEN statement ELSE statement END','if_statement',9,'p_if_statement','CCparser.py',50),
  ('if_statement -> IF OPENPAREN condition CLOSEPAREN THEN statement END','if_statement',7,'p_if_statement','CCparser.py',51),
  ('for_loop -> FOR OPENPAREN assignment condition SEMICOLON assignment CLOSEPAREN DO statement END','for_loop',10,'p_for_loop','CCparser.py',61),
  ('while_loop -> WHILE OPENPAREN condition CLOSEPAREN DO statement END','while_loop',7,'p_while_loop','CCparser.py',68),
  ('display -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON','display',5,'p_display','CCparser.py',75),
  ('return_statement -> RETURN expression SEMICOLON','return_statement',3,'p_return_statement','CCparser.py',82),
  ('condition -> expression comparator expression','condition',3,'p_condition','CCparser.py',89),
  ('expression -> term','expression',1,'p_expression','CCparser.py',96),
  ('expression -> expression ADD term','expression',3,'p_expression','CCparser.py',97),
  ('expression -> expression SUBTRACT term','expression',3,'p_expression','CCparser.py',98),
  ('expression -> string_literal','expression',1,'p_expression','CCparser.py',99),
  ('string_literal -> STRING_LITERAL','string_literal',1,'p_string_literal','CCparser.py',109),
  ('term -> factor','term',1,'p_term','CCparser.py',116),
  ('term -> term MULTIPLY factor','term',3,'p_term','CCparser.py',117),
  ('term -> term DIVIDE factor','term',3,'p_term','CCparser.py',118),
  ('factor -> NUMBER','factor',1,'p_factor','CCparser.py',128),
  ('factor -> OPENPAREN expression CLOSEPAREN','factor',3,'p_factor','CCparser.py',129),
  ('factor -> identifier','factor',1,'p_factor','CCparser.py',130),
  ('comparator -> LESSTHAN','comparator',1,'p_comparator','CCparser.py',140),
  ('comparator -> GREATERTHAN','comparator',1,'p_comparator','CCparser.py',141),
  ('comparator -> LESSTHANOREQUAL','comparator',1,'p_comparator','CCparser.py',142),
  ('comparator -> GREATERTHANOREQUAL','comparator',1,'p_comparator','CCparser.py',143),
  ('comparator -> NOTEQUAL','comparator',1,'p_comparator','CCparser.py',144),
  ('comparator -> EQUIVALENT','comparator',1,'p_comparator','CCparser.py',145),
  ('number -> NUMBER','number',1,'p_number','CCparser.py',152),
  ('identifier -> IDENTIFIER','identifier',1,'p_identifier','CCparser.py',159),
  ('contract_declaration -> CONTRACT IDENTIFIER CURLYOPENINGPAREN contract_statement_list CURLYCLOSINGPAREN','contract_declaration',5,'p_contract_declaration','CCparser.py',166),
  ('contract_statement_list -> contract_statement_list contract_statement','contract_statement_list',2,'p_contract_statement_list','CCparser.py',173),
  ('contract_statement_list -> contract_statement','contract_statement_list',1,'p_contract_statement_list','CCparser.py',174),
  ('contract_statement -> state_declaration','contract_statement',1,'p_contract_statement','CCparser.py',184),
  ('contract_statement -> function_declaration','contract_statement',1,'p_contract_statement','CCparser.py',185),
  ('contract_statement -> event_declaration','contract_statement',1,'p_contract_statement','CCparser.py',186),
  ('state_declaration -> VAR IDENTIFIER TYPE_SPECIFIER EQUAL expression SEMICOLON','state_declaration',6,'p_state_declaration','CCparser.py',193),
  ('state_declaration -> VAR IDENTIFIER TYPE_SPECIFIER SEMICOLON','state_declaration',4,'p_state_declaration','CCparser.py',194),
  ('function_declaration -> VISIBILITY FUNCTION IDENTIFIER OPENPAREN function_params_list CLOSEPAREN RETURNS OPENPAREN TYPE_SPECIFIER CLOSEPAREN statement','function_declaration',11,'p_function_declaration','CCparser.py',204),
  ('function_declaration -> VISIBILITY FUNCTION IDENTIFIER OPENPAREN CLOSEPAREN statement','function_declaration',6,'p_function_declaration','CCparser.py',205),
  ('function_params_list -> function_params_list COMMA function_params','function_params_list',3,'p_function_params_list','CCparser.py',215),
  ('function_params_list -> function_params','function_params_list',1,'p_function_params_list','CCparser.py',216),
  ('function_params -> TYPE_SPECIFIER IDENTIFIER','function_params',2,'p_function_params','CCparser.py',226),
  ('event_declaration -> EVENT IDENTIFIER OPENPAREN event_params_list CLOSEPAREN SEMICOLON','event_declaration',6,'p_event_declaration','CCparser.py',233),
  ('event_declaration -> EVENT IDENTIFIER OPENPAREN CLOSEPAREN SEMICOLON','event_declaration',5,'p_event_declaration','CCparser.py',234),
  ('event_params_list -> event_params_list COMMA event_param','event_params_list',3,'p_event_params_list','CCparser.py',244),
  ('event_params_list -> event_param','event_params_list',1,'p_event_params_list','CCparser.py',245),
  ('event_param -> TYPE_SPECIFIER IDENTIFIER','event_param',2,'p_event_param','CCparser.py',255),
  ('visibility -> PUBLIC','visibility',1,'p_visibility','CCparser.py',262),
  ('visibility -> PRIVATE','visibility',1,'p_visibility','CCparser.py',263),
  ('visibility -> INTERNAL','visibility',1,'p_visibility','CCparser.py',264),
  ('visibility -> EXTERNAL','visibility',1,'p_visibility','CCparser.py',265),
  ('type_specifier -> ADDRESS','type_specifier',1,'p_type_specifier','CCparser.py',271),
  ('type_specifier -> BOOL','type_specifier',1,'p_type_specifier','CCparser.py',272),
  ('type_specifier -> INT','type_specifier',1,'p_type_specifier','CCparser.py',273),
  ('type_specifier -> STRING','type_specifier',1,'p_type_specifier','CCparser.py',274),
  ('type_specifier -> ADDRESS_LITERAL','type_specifier',1,'p_type_specifier','CCparser.py',275),
  ('type_specifier -> NETWORK_IDENTIFIER','type_specifier',1,'p_type_specifier','CCparser.py',276),
  ('emit_event -> EMIT IDENTIFIER OPENPAREN expression_list CLOSEPAREN SEMICOLON','emit_event',6,'p_emit_event','CCparser.py',283),
  ('emit_event -> EMIT IDENTIFIER OPENPAREN CLOSEPAREN SEMICOLON','emit_event',5,'p_emit_event','CCparser.py',284),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','CCparser.py',294),
  ('expression_list -> expression','expression_list',1,'p_expression_list','CCparser.py',295),
]
